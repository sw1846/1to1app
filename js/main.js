// main-google.js - Google DriveÁâàÁî®„ÅÆÂàùÊúüÂåñ„Å®„Ç§„Éô„É≥„Éà„Éè„É≥„Éâ„É©

// ÂàùÊúüÂåñ
document.addEventListener('DOMContentLoaded', async () => {
    // Êó¢Â≠ò„ÅÆÂàùÊúüÂåñÈñ¢Êï∞„ÇíÂÆüË°å
    if (typeof initializeEventListeners === 'function') {
        initializeEventListeners();
    }
    if (typeof initializeTheme === 'function') {
        initializeTheme();
    }
    
    // Google DriveÁâπÊúâ„ÅÆÂàùÊúüÂåñ
    initializeGoogleDriveUI();
});

// Google DriveÁî®UIÂàùÊúüÂåñ
function initializeGoogleDriveUI() {
    // „É≠„Éº„Ç´„É´‰øùÂ≠ò„Éú„Çø„É≥„ÇíÈùûË°®Á§∫ÔºàÂ≠òÂú®„Åô„ÇãÂ†¥ÂêàÔºâ
    const selectFolderBtn = document.getElementById('selectFolderBtn');
    if (selectFolderBtn) {
        selectFolderBtn.style.display = 'none';
    }
    
    // Ë™çË®º„É°„ÉÉ„Çª„Éº„Ç∏„ÅÆÂàùÊúüË°®Á§∫Ë®≠ÂÆö
    const authMessage = document.getElementById('authMessage');
    if (authMessage) {
        authMessage.style.display = 'block';
    }
}

// „Ç§„Éô„É≥„Éà„É™„Çπ„Éä„Éº„ÅÆÂàùÊúüÂåñÔºàÊó¢Â≠ò„ÅÆmain.js„Åã„ÇâÁßªÊ§çÔºâ
function initializeEventListeners() {
    // „ÉÜ„Éº„ÉûÂàáÊõø
    const themeToggle = document.getElementById('themeToggle');
    if (themeToggle) {
        themeToggle.addEventListener('click', toggleTheme);
    }

    // ÈÄ£Áµ°ÂÖàËøΩÂä†
    const addContactBtn = document.getElementById('addContactBtn');
    if (addContactBtn) {
        addContactBtn.addEventListener('click', () => {
            if (typeof gapi !== 'undefined' && gapi.client && gapi.client.getToken()) {
                openContactModal();
            } else {
                showNotification('„É≠„Ç∞„Ç§„É≥„ÅåÂøÖË¶Å„Åß„Åô', 'warning');
            }
        });
    }

    // „Ç®„ÇØ„Çπ„Éù„Éº„Éà„Éª„Ç§„É≥„Éù„Éº„Éà
    const exportBtn = document.getElementById('exportBtn');
    if (exportBtn) {
        exportBtn.addEventListener('click', () => {
            if (typeof exportToCSV === 'function') {
                exportToCSV();
            }
        });
    }
    
    const importBtn = document.getElementById('importBtn');
    if (importBtn) {
        importBtn.addEventListener('click', () => {
            if (typeof importFromCSV === 'function') {
                importFromCSV();
            }
        });
    }

    // „Éá„Éº„Çø„Éû„Éº„Ç∏„Éú„Çø„É≥
    const mergeBtn = document.getElementById('mergeDataBtn');
    if (mergeBtn) {
        mergeBtn.addEventListener('click', () => {
            if (typeof mergeOldData === 'function') {
                mergeOldData();
            }
        });
    }

    // „Çø„ÉñÂàáÊõø
    document.querySelectorAll('.tab-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            if (typeof switchTab === 'function') {
                switchTab(e.target.dataset.tab);
            }
        });
    });

    // Ë°®Á§∫ÂàáÊõø
    document.querySelectorAll('.view-btn').forEach(btn => {
        btn.addEventListener('click', (e) => {
            if (typeof switchView === 'function') {
                switchView(e.target.dataset.view);
            }
        });
    });

    // Ê§úÁ¥¢„Éª„ÇΩ„Éº„Éà
    const searchInput = document.getElementById('searchInput');
    if (searchInput) {
        searchInput.addEventListener('input', () => {
            if (typeof filterContacts === 'function') {
                filterContacts();
            }
        });
    }
    
    const sortSelect = document.getElementById('sortSelect');
    if (sortSelect) {
        sortSelect.addEventListener('change', (e) => {
            currentSort = e.target.value;
            if (typeof renderContacts === 'function') {
                renderContacts();
            }
        });
    }

    // „Éï„Ç£„É´„Çø„Éº
    const typeFilter = document.getElementById('typeFilter');
    if (typeFilter) {
        typeFilter.addEventListener('change', () => {
            if (typeof filterContacts === 'function') {
                filterContacts();
            }
        });
    }
    
    const affiliationFilter = document.getElementById('affiliationFilter');
    if (affiliationFilter) {
        affiliationFilter.addEventListener('input', (e) => {
            if (typeof filterValues !== 'undefined') {
                filterValues.affiliation = e.target.value;
                if (typeof filterContacts === 'function') {
                    filterContacts();
                }
            }
        });
    }
    
    const businessFilter = document.getElementById('businessFilter');
    if (businessFilter) {
        businessFilter.addEventListener('input', (e) => {
            if (typeof filterValues !== 'undefined') {
                filterValues.business = e.target.value;
                if (typeof filterContacts === 'function') {
                    filterContacts();
                }
            }
        });
    }
    
    const industryInterestsFilter = document.getElementById('industryInterestsFilter');
    if (industryInterestsFilter) {
        industryInterestsFilter.addEventListener('input', (e) => {
            if (typeof filterValues !== 'undefined') {
                filterValues.industryInterests = e.target.value;
                if (typeof filterContacts === 'function') {
                    filterContacts();
                }
            }
        });
    }
    
    const residenceFilter = document.getElementById('residenceFilter');
    if (residenceFilter) {
        residenceFilter.addEventListener('input', (e) => {
            if (typeof filterValues !== 'undefined') {
                filterValues.residence = e.target.value;
                if (typeof filterContacts === 'function') {
                    filterContacts();
                }
            }
        });
    }

    // „Éâ„É≠„ÉÉ„Éó„Çæ„Éº„É≥
    if (typeof setupDropZone === 'function') {
        setupDropZone('photoDropZone', 'photo', true);
        setupDropZone('businessCardDropZone', 'businessCard', true);
        setupDropZone('attachmentDropZone', 'attachmentList', false);
        setupDropZone('meetingAttachmentDropZone', 'meetingAttachmentList', false);
    }

    // Ë§áÊï∞ÈÅ∏Êäû„ÅÆË®≠ÂÆö
    if (typeof setupMultiSelect === 'function') {
        setupMultiSelect();
    }
    if (typeof setupReferrerAutocomplete === 'function') {
        setupReferrerAutocomplete();
    }

    // Markdown„Ç®„Éá„Ç£„Çø„ÅÆË®≠ÂÆö
    if (typeof setupMarkdownEditors === 'function') {
        setupMarkdownEditors();
    }

    // „É¢„Éº„ÉÄ„É´Â§ñ„ÇØ„É™„ÉÉ„ÇØ„ÅßÈñâ„Åò„Çã
    if (typeof setupModalClose === 'function') {
        setupModalClose();
    }

    // Êé•Ëß¶ÊñπÊ≥ï„ÅÆÂàá„ÇäÊõø„Åà
    const contactMethodDirect = document.getElementById('contactMethodDirect');
    const contactMethodReferral = document.getElementById('contactMethodReferral');
    if (contactMethodDirect && typeof handleContactMethodChange === 'function') {
        contactMethodDirect.addEventListener('change', handleContactMethodChange);
    }
    if (contactMethodReferral && typeof handleContactMethodChange === 'function') {
        contactMethodReferral.addEventListener('change', handleContactMethodChange);
    }

    // „Ç≠„Éº„Éú„Éº„Éâ„Ç∑„Éß„Éº„Éà„Ç´„ÉÉ„Éà
    document.addEventListener('keydown', (e) => {
        if (e.ctrlKey && e.key === 's') {
            e.preventDefault();
            if (typeof saveAllData === 'function') {
                saveAllData();
            }
        }
    });

    // Ë§áÊï∞ÈÅ∏Êäû„ÅÆÂ§ñÂÅ¥„ÇØ„É™„ÉÉ„ÇØ„ÅßÈñâ„Åò„Çã
    document.addEventListener('click', (e) => {
        if (!e.target.closest('.multi-select-container')) {
            document.querySelectorAll('.multi-select-dropdown').forEach(dropdown => {
                dropdown.classList.remove('show');
            });
        }
    });
}

// „ÉÜ„Éº„ÉûÁÆ°ÁêÜ
function initializeTheme() {
    const savedTheme = localStorage.getItem('theme') || 'light';
    document.documentElement.setAttribute('data-theme', savedTheme);
    updateThemeIcon(savedTheme);
}

function toggleTheme() {
    const currentTheme = document.documentElement.getAttribute('data-theme');
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    document.documentElement.setAttribute('data-theme', newTheme);
    localStorage.setItem('theme', newTheme);
    updateThemeIcon(newTheme);
}

function updateThemeIcon(theme) {
    const themeIcon = document.getElementById('themeIcon');
    if (themeIcon) {
        themeIcon.textContent = theme === 'light' ? 'üåô' : '‚òÄÔ∏è';
    }
}